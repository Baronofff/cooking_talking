.. cooking_talking_bot documentation master file, created by
   sphinx-quickstart on Wed Dec 18 10:41:36 2024.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

cooking_talking_bot documentation
=================================

"Кулинарная книга" это чат-бот ассистент для занятий кулинарией.Он поможет выбрать блюдо на основе имеющихся
у вас ингредиентов или интересующей вас категории блюд. Также, чтобы не скучать, пока печется бисквит или варится
сгущенка вы можете пообщаться со смоделированным нами Ренатом Агзамовым и задать ему вопросы!
Бот работает в Telegram, для комфортного взаимодействия ознакомьтесь с его функционалом ниже.
Данное приложение предназначено для всех, кто решил что-нибудь приготовить.

*Важно! Для работы чат-бота необходима мобильная или десктопная версия Telegram.*

.. toctree::
   :maxdepth: 2
   :caption: Содержание:

   Установка
   Функциональность
      - Поиск рецептов
      - Ответы на вопросы
   Описание файлов .py
Установка
`````````````
**Запуск бота**

1. Откройте Telegram и введите в поисковой строке @culinary_book_bot.
2. Выберите команду /start.


Если же вы хотите запустить бота локально, то вам нужно установить необходимые зависимости.

1. Установите библиотеки из файла requirements.txt
2. Создайте файл token.txt и добавьте туда токен вашего Telegram-бота.
3. Убедитесь, что у вас установлен и запущен Redis. Подробнее можете прочитать `здесь <https://redis.io/docs/latest/develop/clients/redis-py/>`_.



Функциональность
`````````````
**Команды:** Ввод команд в чате происходит через символ косой черты (“/”).

* /start: Запускает взаимодействие с ботом и выводит приветственное сообщение с кратким описанием функционала бота.
* /help: Выводит ссылку на инструкцию для пользователя.
* /mode: Переключение режима работы бота.

Бот поддерживает два режима работы: MODE_QUESTIONS и MODE_RECIPES.
Каждый режим отвечает за выполнение определённых задач и обработку входящих сообщений от пользователей.

1. Поиск рецептов (MODE_RECIPES)
^^^^^^^^^^^^^^^^^^
В этом режиме бот помогает пользователям находить рецепты на основе введённых ингредиентов(ввод текста)
или категории (выбор кнопки).

* **Текст**
Чтобы получить список рецептов на основе ингредиентов необходимо отправить сообщение
с вашими ингредиентами, перечисленными через запятую с пробелом, например:
*молоко, соль*

* **Кнопки**
Чтобы получить рецепты из определенной категории необходимо выбрасть соответствующую ей кнопку.
Вы получите три рандомных рецепта из желаемой категории.

**Список кнопок:**

- **Завтраки:** Предоставляет пользователю список блюд, отмеченных тэгом “Завтрак”.
- **Салаты:** Предоставляет пользователю список блюд, отмеченных тэгом “Салаты”.
- **Горячее:** Предоставляет пользователю список блюд, отмеченных тэгом “Горячее”.
- **Гарниры:** Предоставляет пользователю список блюд, отмеченных тэгом “Гарниры”.
- **Закуски:** Предоставляет пользователю список блюд, отмеченных тэгом “Закуски”.
- **Десерты:** Предоставляет пользователю список блюд, отмеченных тэгом “Десерты”.
- **Выпечка:** Предоставляет пользователю список блюд, отмеченных тэгом “Выпечка”.
- **Напитки:** Предоставляет пользователю список блюд, отмеченных тэгом “Напитки”.
- **Другое:** Предоставляет пользователю список блюд, отмеченных тэгом “Другое”.
- **Блюда из пищи животного происхождения:** Предоставляет пользователю список блюд, отмеченных тэгом “Блюда из пищи животного происхождения”.

**Вывести ещё:** Выводит больше рецептов, соответствующих заданному запросу.

- **Логика работы**:

  1. Бот получает текст сообщения от пользователя.
  2. Если пользователь ввёл одну из заранее определённых категорий (например, "Горячее", "Десерты"), бот вызывает функцию handle_category(message) для обработки выбранной категории.
  3. Если введённые данные не соответствуют категориям, бот пытается получить рецепты по ингредиентам с помощью функции get_recipes_by_ingredients(user_input).
  4. Рецепты сохраняются в состоянии пользователя, и вызывается функция send_recipes_page(message.chat.id) для отправки пользователю информации о найденных рецептах.

2. Ответы на вопросы (MODE_QUESTIONS)
^^^^^^^^^^^^^^^^^^
В этом режиме бот обрабатывает вопросы пользователей и предоставляет ответы на них.
Вопросы вводятся в текстовую строку и отправляются обычным сообщением.

*Важно! Модель работает достаточно медленно, необходимо дождаться ответа, прежде чем задавать новый вопрос.*

- **Логика работы**:
  1. Бот получает текст вопроса из сообщения.
  2. Сначала он пытается найти ответ в кэше с помощью функции get_question_from_cache(question).
  3. Если ответ найден, бот отправляет его пользователю.
  4. Если ответ не найден, бот обращается к модели для получения ответа:
     - Используется функция model_pipeline, которая принимает вопрос и контекст.
     - Полученный ответ сохраняется в кэше на один час с помощью Redis.
     - Бот отправляет ответ пользователю.


Описание файлов .py
`````````````
* bot - этот файл отвечает за основную логику работы Telegram-бота. Содержит инициализацию бота, обработчики сообщений и команд от пользователей.

* qa_model - этот файл отвечает за загрузку и создание модели для ответов на вопросы.
* recipes_parsing - этот файл отвечает за парсинг рецептов с `сайта <https://art-lunch.ru/all-recipes/>`_.
* tg_bot - этот файл содержит логику работы Telegram-бота, поддерживающего только ответы на вопросы.
